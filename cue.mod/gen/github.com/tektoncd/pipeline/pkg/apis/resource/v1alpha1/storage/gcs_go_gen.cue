// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/tektoncd/pipeline/pkg/apis/resource/v1alpha1/storage

package storage

import resourcev1alpha1 "github.com/tektoncd/pipeline/pkg/apis/resource/v1alpha1"

_#gcsSecretVolumeMountPath:     "/var/secret"
_#activateServiceAccountScript: "#!/usr/bin/env bash\nif [[ \"${GOOGLE_APPLICATION_CREDENTIALS}\" != \"\" ]]; then\n  echo GOOGLE_APPLICATION_CREDENTIALS is set, activating Service Account...\n  gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}\nfi\n" // `#!/usr/bin/env bash
				// if [[ "${GOOGLE_APPLICATION_CREDENTIALS}" != "" ]]; then
				// echo GOOGLE_APPLICATION_CREDENTIALS is set, activating Service
				// Account...
				// gcloud auth activate-service-account
				// --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
				// fi
				// `

// GCSResource is a GCS endpoint from which to get artifacts which is required
// by a Build/Task for context (e.g. a archive from which to build an image).
#GCSResource: {
	name:     string @go(Name)
	type:     string @go(Type)
	location: string @go(Location)
	typeDir:  bool   @go(TypeDir)

	//Secret holds a struct to indicate a field name and corresponding secret name to populate it
	secrets: [...resourcev1alpha1.#SecretParam] @go(Secrets,[]resourcev1alpha1.SecretParam)
}
